@import '../mixins/mixin.scss';
@import '../mixins/config.scss';

$size: (
        large: '9px 16px',
        middle: '4px 16px',
        small: '0 5px'
);

$theme: (
        primary: (
                main: $color-primary,
                hover: rgb(41, 159, 255),
                active: mix(black, $color-primary, 20%),
                disabled: 'rgba(191, 191, 191, 1)'
        ),
        danger: (
                main: 'rgba(255, 77, 79, 1)',
                hover: 'rgba(255, 120, 117, 1)',
                active: 'rgba(207, 19, 34, 1)',
                disabled: 'rgba(191, 191, 191, 1)'
        ),
        info: (
                main: 'rgba(89, 89, 89, 1)',
                hover: 'rgba(140, 140, 140, 1)',
                active: 'rgba(67, 67, 67, 1)',
                disabled: 'rgba(191, 191, 191, 1)'
        ),
        success: (
                main: 'rgba(36, 180, 126, 1)',
                hover: 'rgba(70, 194, 144, 1)',
                active: 'rgba(21, 143, 102, 1)',
                disabled: 'rgba(191, 191, 191, 1)'
        )
);

$block: cx-btn;

@mixin colorGroup($theme, $main, $hover, $active, $disabled, $params...) {
  @each $key in $params {
    &.#{$block + '__' + $theme} {
      #{$key}: #{$main};

      &:hover {
        #{$key}: #{$hover};
      }

      &:active {
        #{$key}: #{$active};
      }

      &.#{$block + '__disabled'} {
        #{$key}: #{$main} !important;
        opacity: .5;
      }
    }
  }
}

@mixin shallowBorder($key,$alpha: 0.08) {
  &.#{$block + '__' + $key} {
    border-color: rgba($color: #000000, $alpha: $alpha);

    &.#{$block + '__disabled'} {
      border-color: rgba($color: #000000, $alpha: $alpha) !important;
    }
  }
}

@include b(btn) {
  font-family: PingFang SC;
  position: relative;
  font-style: normal;
  font-weight: 500;
  font-size: 14px;
  box-sizing: border-box;
  border-radius: 2px;
  border-style: solid;
  border-width: 1px;
  outline: 0;
  cursor: pointer;
  background-color: rgba($color: #000000, $alpha: 0);

  @include e(badge) {
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 12px;
    position: absolute;
    height: 16px;
    min-width: 16px;
    padding: 2px;
    border-radius: 10px;
    background-color: #f56c6c;
    right: -7px;
    top: -7px;
  }

  @include e(disabled) {
    position: relative;

    i {
      cursor: not-allowed;
    }
  }

  @include e(loading) {
    position: relative;
    pointer-events: none;

    &::before {
      position: absolute;
      pointer-events: none;
      content: '';
      left: -1px;
      top: -1px;
      right: -1px;
      bottom: -1px;
      border-radius: inherit;
      z-index: 100;
      background-color: hsla(0, 0%, 100%, 0.35);
    }
  }

  @each $key, $value in $size {
    @include e(#{$key}) {
      padding: #{$value};
    }
  }

  @include e(level__1) {
    color: #ffffff;

    @each $key, $value in $theme {
      $main: map-get($value, 'main');
      $hover: map-get($value, 'hover');
      $active: map-get($value, 'active');
      $disabled: map-get($value, 'disabled');

      @include colorGroup($key, $main, $hover, $active, $disabled, 'background', 'border-color');
    }
  }

  @include e(level__2) {
    color: rgba(0, 0, 0, 0.65);
    background: linear-gradient(144.65deg, #DCE8FF 4.69%, #FFFFFF 77.27%);
    border-radius: 2px;
    @each $key, $value in $theme {
      $hover: map-get($value, 'hover');
      $active: map-get($value, 'active');

      @include colorGroup($key, 'rgba(0, 0, 0, 0.65)', $hover, $active, 'rgba(0, 0, 0, 0.3)', 'color', 'border-color');
      @include shallowBorder($key, 0.18);
    }
    &:hover {
      background: transparent;
    }
    &.#{$block + '__disabled'} {
      background: transparent;
    }
  }

  @include e(level__3) {
    border-color: rgba($color: #000000, $alpha: 0);
    padding-left: 4px !important;
    padding-right: 4px !important;

    @each $key, $value in $theme {
      $main: map-get($value, 'main');
      $hover: map-get($value, 'hover');
      $active: map-get($value, 'active');
      $disabled: map-get($value, 'disabled');

      @include colorGroup($key, $main, $hover, $active, $disabled, 'color');
    }
  }

  @include e(level__4) {
    color: $color-primary;
    @each $key, $value in $theme {
      $main: map-get($value, 'main');
      $hover: map-get($value, 'hover');
      $active: map-get($value, 'active');

      @include colorGroup($key, $main, $hover, $active, 'rgba(0, 0, 0, 0.3)', 'color');
      @include shallowBorder($key);
    }
  }
}
