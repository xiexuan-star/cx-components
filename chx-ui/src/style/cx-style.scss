@use "sass:math";
// --------------- 组件类 ---------------
.cx_card {
  padding: 0 16px 16px 16px !important;
  background-color: #fff !important;
  border-radius: 4px;
}

// 兼容旧写法,勿删
.card {
  @extend .cx_card;
}

.cx_mask {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  opacity: 0;
}

.cx_show {
  visibility: visible;
  display: block;
  opacity: 1;
}

.cx_forbidden {
  cursor: not-allowed;
}

@each $val in move, pointer {
  .cx_cursor_#{$val} {
    cursor: $val;
  }
}

// --------------- UI规范类 ---------------
// content
%cxTitle {
  font-style: normal;
  font-weight: 500;
  color: rgba($color: #000000, $alpha: 0.85);
}

.cx_primary_title {
  @extend %cxTitle;
  font-size: $primary-title-ft-sz !important;
}

.cx_secondary_title {
  @extend %cxTitle;
  font-size: $secondary-title-ft-sz !important;
}

.cx_third_title {
  @extend %cxTitle;
  font-size: $third-title-ft-sz !important;
}

.cx_comment {
  @extend %cxTitle;
  font-weight: normal !important;
  font-size: $comment-ft-sz !important;
  color: rgba(0, 0, 0, 0.45) !important;
}

.cx_break_card {
  margin-left: -16px !important;
  margin-right: -16px !important;
}

.cx_header {
  @extend %cxTitle;
  font-size: $secondary-title-ft-sz !important;
  padding: 0 16px;
  height: 42px;
  display: flex;
  align-items: center;
}

// --------------- 元素样式类 ---------------
// 兼容旧写法,勿删
.clickable {
  cursor: pointer !important;
}

.cx_clickable {
  cursor: pointer !important;
}

.cx_border_0 {
  border: 0 !important;
}

.cx_visible_hidden {
  visibility: hidden;
}

.cx_border {
  border: 1px solid #d9d9d9 !important;
}

.cx_fr {
  float: right;
}

.cx_fl {
  float: left;
}

$i: 100;
@while $i>=0 {
  .cx_opacity_#{$i} {
    opacity: #{math.div($i,100)} !important;
  }
  $i: $i - 10
}

@for $val from 1 through 8 {
  .cx_b_radius_#{$val} {
    border-radius: #{$val}px !important;
  }
}

@each $key, $val in (bl: left, br: right, bt: top, bb: bottom) {
  .cx_#{$key} {
    border-#{$val}: 1px solid #d9d9d9 !important;
  }
  .cx_#{$key}_0 {
    border-#{$val}: 0 !important;
  }
}

// 整十位的宽高
$i: 1200;
@while $i>=0 {
  .cx_w_#{$i} {
    width: #{$i}px !important;
  }
  .cx_h_#{$i} {
    height: #{$i}px !important;
  }
  @if ($i>=300) {
    $i: $i - 100;
  } @else {
    $i: $i - 10;
  }
}

// 百分比的宽高
$i: 100;
@while $i > 0 {
  .cx_w_#{$i}p {
    width: percentage(math.div($i,100)) !important;
  }
  .cx_h_#{$i}p {
    height: percentage(math.div($i,100)) !important;
  }
  $i: $i - 10
}

// 特殊数值的宽高,待补充
@each $val in 42, 56, 54 {
  .cx_w_#{$val} {
    width: #{$val}px !important;
  }
  .cx_h_#{$val} {
    height: #{$val}px !important;
  }
}

.cx_bg_white {
  background-color: #fff !important;
}

.cx_bg_transparent {
  background: transparent !important;
  background-color: transparent !important;
}

@each $key, $val in (ib: inline-block, b: block, n: none, flex: flex, i: inline) {
  .cx_dp_#{$key} {
    display: #{$val};
  }
}

//// --------------- 文本类 ---------------
@for $val from 12 through 30 {
  .cx_fs_#{$val} {
    font-size: #{$val}px !important;
  }
}

$i: 85;
@while $i > 0 {
  .cx_fc_black_#{$i} {
    color: rgba(0, 0, 0, math.div($i,100)) !important;
  }
  .cx_bg_black_#{$i} {
    background-color: rgba(0, 0, 0, math.div($i,100)) !important;
  }
  $i: $i - 5
}

.cx_fc_white {
  color: white !important;
}

.cx_ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.cx_ellipsis_2 {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
}

@each $val in left, right, center {
  .cx_align_#{$val} {
    text-align: $val !important;
  }
}

// --------------- 布局类 ---------------
$direction-map: (t:top, b:bottom, l:left, r:right);

@mixin marginPaddingWithDirection($t,$type,$i,$unit:null) {
  .cx_#{$t}_#{$i} {
    #{$type}: #{$i}#{$unit} !important;
  }
  @each $direction in 't', 'b', 'tb', 'l', 'r', 'lr' {
    .cx_#{$t}#{$direction}_#{$i} {
      @for $index from 1 through str-length($direction) {
        $d: str-slice($direction, $index, $index);
        #{$type}-#{map-get($direction-map,$d)}: #{$i}#{$unit} !important;
      }
    }
  }
}

@mixin innerPaddingMargin($i,$unit:null) {
  @each $t, $type in (m:margin, p:padding) {
    @include marginPaddingWithDirection($t, $type, $i, $unit);
  }
}

$i: 100;
@while $i >= 0 {
  @include innerPaddingMargin($i, px);
  @if $i > 40 {
    $i: $i - 10
  } @else {
    $i: $i - 1
  }
}

@include marginPaddingWithDirection(m, margin, auto);

.cx_iflex {
  display: inline-flex !important;
}

.cx_flex_d_column {
  flex-direction: column;
}

.cx_flex_center {
  display: flex !important;
  align-items: center !important;
}

.cx_flex_wrap {
  flex-wrap: wrap;
}

.cx_flex_1 {
  flex: 1;
}

@each $key,
$val in (
        between: space-between,
        around: space-around,
        evenly: space-evenly,
        center: center,
        start: flex-start,
        end: flex-end
) {
  .cx_justify_#{$key} {
    justify-content: $val !important;
  }
  .cx_flex_align_#{$key} {
    align-items: $val !important;
  }
}

.cx_of_auto {
  overflow: auto;
}

.cx_of_hidden {
  overflow: hidden;
}

.cx_line {
  height: 1px;
  margin: 0 -16px;
  background-color: rgba($color: #000, $alpha: 0.08);
  width: calc(100% + 32px);
}

@each $val in absolute, relative, fixed, static {
  .cx_pos_#{$val} {
    position: $val;
  }
}

$i: 30;
@while $i >= 0 {
  @each $direction in left, right, top, bottom {
    .cx_#{$direction}_#{$i} {
      #{$direction}: #{$i}px;
    }
  }
  $i: $i - 5
}

.cx_border_box {
  box-sizing: border-box;
}

@each $key, $val in (ab: absolute, re: relative, fix: fixed) {
  .cx_position_#{$key} {
    position: $val;
  }
}
